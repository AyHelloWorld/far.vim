*far.txt*   Find And Replace

Author:         Oleg Khalidov <brooth@gmail.com>
License:        MIT
Description:    Find And Replace
Homepage:       https://github.com/brooth/far.vim/
Version:        beta1

==============================================================================
CONTENTS                                                        *far-contents*

    1. Intro ................................ |far-intro|
    2. Usage ................................ |far-usage|
    2.1  Far ................................ |:Far|
    2.2  Farp ............................... |:Farp|
    2.3  Fardo .............................. |:Fardo|
    2.4  Refar .............................. |:Refar|
    2.5  Multiline replacement .............. |far-multiline|
    3. Configuration ........................ |far-config|
    4. Mappings ............................. |far-mappings|
    5. Params ............................... |far-params|
    5. Bugs ................................. |far-bugs|
    6. Changelog ............................ |far-changelog|

==============================================================================
INTRO                                                           *far-intro*

    Far.vim plugin makes it easier to find and replaces text over the project.
    It's inspired by fancy IDEs, like IntellyJ and Eclipse, which provide
    cozy tools for such tasks. Far.vim shows all the matches it found and
    preview the result. It's allowed to exclude matched items, preview them,
    jump to its source and more.

==============================================================================
USAGE                                                           *far-usage*

2.1 Far                                                         *:Far*
:Far {pattern} {replace-with} {file-mark} [params]
    Find text to replace. Similar to *:substitute* command.
    The arguments are separated by space (" "). To escape space
    character use "\s" or "\ ".
    For the {pattern} see |pattern|. You can also use '*' as {pattern},
    see |far-multiline| for details.
    {replace-with} can be a literal string, or |sub-replace-special|.
    {file-mark} simple file mask pattern, see |:vimgrep| for examples.
    Note: Use '%' to set current file as {file-mask}
    For [params] see |far-cmd-params|


2.1 Farp                                                        *:Farp*
:Farp [params]

    Use |Farp| command to enter "pattern", "replace with" and "file mask"
    one after the other:
>
     :Farp [<params>]
     >Search (pattern): {pattern}
     >Replace with: [replace-with]
     >File mask: {file-mark}
<
    Note: |Farp| allows to enter arguments without escaping space symbol "\ ".
    Note: |Farp| allows empty [replace-with] to be able to remove matched text.
    For the {pattern}, {replace-with}, {file-mark} and [params] see |Far| command


2.3 Fardo                                                       *:Fardo*
:Fardo [params]

    |Fardo| starts the replacement task. This command must be executed in a FAR
    buffer (buffer with |:Far| or |:Farp| results)
    For [params] see |far-fardo-params|


2.4 Refar                                                       *:Refar*
:Refar

    |Refar| reruns |:Far| or |:Farp| command. Note: It must be executed in a FAR buffer.
    Use |:Refar| in case the data's been changed so you need to update
    the search result.


2.5 Multiline replacement                                       *far-multiline*
    You can use multiline text as {pattern} or/and {replace-with} expressions.

    The first approach is to use visual selection. Go to Visual mode, highlight
    the text you want to replace and hit ':'. Use '*' (asterisk) sign to use the
    selected text as {pattern} for |:Far| or |:Farp| command:
>
    :'<,'>Far * {replace-with} {file-mask} [params]
<
    and resp.:
>
     :Farp [<params>]
     >Search (pattern): *
     >Replace with: [replace-with]
     >File mask: {file-mark}
<

    The second approach is simple to yank and paste the text.
    Note: you need to explicitly escape all the space characters.

==============================================================================
CONFIGURATION                                                   *far-config*
    Use next variables to configure far.vim behavior.

*g:far#default_mappings*
    Apply default mappings for each FAR buffer. See |far-mappings| for details.

    Default value is 1

==============================================================================
4. Mappings                                                     *far-mappings*

==============================================================================
5. Params                                                       *far-params*
    Command (|:Far|, |:Farp| and |:Fardo|) params is used to define |far-config|
    temporarily, i.e. for current execution only.
